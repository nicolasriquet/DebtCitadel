# Generated by Django 4.1.11 on 2023-11-09 08:56

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import dojo.models
import tagulous.models.fields
import tagulous.models.models


class Migration(migrations.Migration):

    dependencies = [
        ('dojo', '0191_debt_context_debt_context_line_debt_context_type_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='debt_context_type',
            old_name='critical_context',
            new_name='critical_debt_context',
        ),
        migrations.RemoveField(
            model_name='debt_context',
            name='enable_product_tag_inheritance',
        ),
        migrations.RemoveField(
            model_name='debt_item',
            name='dynamic_finding',
        ),
        migrations.RemoveField(
            model_name='debt_item',
            name='static_finding',
        ),
        migrations.AddField(
            model_name='debt_context',
            name='enable_debt_context_tag_inheritance',
            field=models.BooleanField(default=False, help_text='Enables debt context tag inheritance. Any tags added on a Debt_Context will automatically be added to all Engagements, Tests, and Debt_Items', verbose_name='Enable Debt Context Tag Inheritance'),
        ),
        migrations.AddField(
            model_name='debt_item',
            name='dynamic_debt_item',
            field=models.BooleanField(default=True, help_text='Flaw has been detected from a Dynamic Application Security Testing tool (DAST).', verbose_name='Dynamic debt_item (DAST)'),
        ),
        migrations.AddField(
            model_name='debt_item',
            name='static_debt_item',
            field=models.BooleanField(default=False, help_text='Flaw has been detected from a Static Application Security Testing tool (SAST).', verbose_name='Static debt_item (SAST)'),
        ),
        migrations.AlterField(
            model_name='debt_context',
            name='lifecycle',
            field=models.CharField(blank=True, choices=[('construction', 'Construction'), ('production', 'Debt_Contextion'), ('retirement', 'Retirement')], max_length=12, null=True),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='The date the debt_item was created inside DefectDojo.', null=True, verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='cve',
            field=models.CharField(help_text='An id of a vulnerability in a security advisory associated with this debt_item. Can be a Common Vulnerabilities and Exposures (CVE) or from other sources.', max_length=50, null=True, verbose_name='Vulnerability Id'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='cvssv3_score',
            field=models.FloatField(blank=True, help_text='Numerical CVSSv3 score for the vulnerability. If the vector is given, the score is updated while saving the debt_item', null=True, verbose_name='CVSSv3 score'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='endpoints',
            field=models.ManyToManyField(blank=True, help_text='The hosts within the debt_context that are susceptible to this flaw. + The status of the endpoint associated with this flaw (Vulnerable, Mitigated, ...).', through='dojo.Debt_Endpoint_Status', to='dojo.endpoint', verbose_name='Endpoints'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='hash_code',
            field=models.CharField(blank=True, editable=False, help_text='A hash over a configurable set of fields that is used for debt_items deduplication.', max_length=64, null=True, verbose_name='Hash Code'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='impact',
            field=models.TextField(blank=True, help_text='Text describing the impact this flaw has on systems, debt_contexts, enterprise, etc.', null=True, verbose_name='Impact'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='inherited_tags',
            field=tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Internal use tags sepcifically for maintaining parity with debt_context. This field will be present as a subset in the tags field', to='dojo.tagulous_debt_item_inherited_tags'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='review_requested_by',
            field=models.ForeignKey(blank=True, help_text='Documents who requested a review for this debt_item.', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='debt_review_requested_by', to='dojo.dojo_user', verbose_name='Review Requested By'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='service',
            field=models.CharField(blank=True, help_text='A service is a self-contained piece of functionality within a Debt_Context. This is an optional field which is used in deduplication of debt_items when set.', max_length=200, null=True, verbose_name='Service'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='sonarqube_issue',
            field=models.ForeignKey(blank=True, help_text='The SonarQube issue associated with this debt_item.', null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.sonarqube_issue', verbose_name='SonarQube issue'),
        ),
        migrations.AlterField(
            model_name='test_import_finding_action',
            name='action',
            field=models.CharField(blank=True, choices=[('N', 'created'), ('C', 'closed'), ('R', 'reactivated'), ('U', 'left untouched'), ('N', 'created'), ('C', 'closed'), ('R', 'reactivated'), ('U', 'left untouched')], max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='Tool_Debt_Context_Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('url', models.CharField(blank=True, max_length=2000, null=True)),
                ('tool_project_id', models.CharField(blank=True, max_length=200, null=True)),
                ('debt_context', models.ForeignKey(default=1, editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.debt_context')),
                ('notes', models.ManyToManyField(blank=True, editable=False, to='dojo.notes')),
                ('tool_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debt_tool_configuration', to='dojo.tool_configuration')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tool_Debt_Context_History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_scan', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('succesfull', models.BooleanField(default=True, verbose_name='Succesfully')),
                ('configuration_details', models.CharField(blank=True, max_length=2000, null=True)),
                ('debt_context', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.tool_debt_context_settings')),
            ],
        ),
        migrations.CreateModel(
            name='Test_Import_Debt_Item_Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('action', models.CharField(blank=True, choices=[('N', 'created'), ('C', 'closed'), ('R', 'reactivated'), ('U', 'left untouched'), ('N', 'created'), ('C', 'closed'), ('R', 'reactivated'), ('U', 'left untouched')], max_length=100, null=True)),
                ('debt_item', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.finding')),
                ('test_import', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.test_import')),
            ],
            options={
                'ordering': ('test_import', 'action', 'debt_item'),
            },
        ),
        migrations.CreateModel(
            name='Tagulous_Objects_Debt_Context_tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('slug',)},
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='Stub_Debt_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=1000)),
                ('date', models.DateField(default=dojo.models.get_current_date)),
                ('severity', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('reporter', models.ForeignKey(default=1, editable=False, on_delete=django.db.models.deletion.RESTRICT, to='dojo.dojo_user')),
                ('test', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.test')),
            ],
            options={
                'ordering': ('-date', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Objects_Debt_Context',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('path', models.CharField(blank=True, max_length=600, null=True, verbose_name='Full file path')),
                ('folder', models.CharField(blank=True, max_length=400, null=True, verbose_name='Folder')),
                ('artifact', models.CharField(blank=True, max_length=400, null=True, verbose_name='Artifact')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('debt_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.debt_context')),
                ('review_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.objects_review')),
                ('tags', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Add tags that help describe this object. Choose from the list or add new tags. Press Enter key to add.', to='dojo.tagulous_objects_debt_context_tags')),
            ],
        ),
        migrations.CreateModel(
            name='Benchmark_Debt_Context_Summary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desired_level', models.CharField(choices=[('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3')], default='Level 1', max_length=15)),
                ('current_level', models.CharField(blank=True, choices=[('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3')], default='None', max_length=15, null=True)),
                ('asvs_level_1_benchmark', models.IntegerField(default=0, help_text='Total number of active benchmarks for this application.')),
                ('asvs_level_1_score', models.IntegerField(default=0, help_text='ASVS Level 1 Score')),
                ('asvs_level_2_benchmark', models.IntegerField(default=0, help_text='Total number of active benchmarks for this application.')),
                ('asvs_level_2_score', models.IntegerField(default=0, help_text='ASVS Level 2 Score')),
                ('asvs_level_3_benchmark', models.IntegerField(default=0, help_text='Total number of active benchmarks for this application.')),
                ('asvs_level_3_score', models.IntegerField(default=0, help_text='ASVS Level 3 Score')),
                ('publish', models.BooleanField(default=False, help_text='Publish score to Debt_Context.')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('benchmark_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.benchmark_type')),
                ('debt_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.debt_context')),
            ],
        ),
        migrations.CreateModel(
            name='Benchmark_Debt_Context',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_fail', models.BooleanField(default=False, help_text='Does the debt_context meet the requirement?', verbose_name='Pass')),
                ('enabled', models.BooleanField(default=True, help_text='Applicable for this specific debt_context.')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.benchmark_requirement')),
                ('debt_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.debt_context')),
                ('notes', models.ManyToManyField(blank=True, editable=False, to='dojo.notes')),
            ],
        ),
        migrations.AddIndex(
            model_name='test_import_debt_item_action',
            index=models.Index(fields=['debt_item', 'action', 'test_import'], name='dojo_test_i_debt_it_0529a1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='test_import_debt_item_action',
            unique_together={('test_import', 'debt_item')},
        ),
        migrations.AlterUniqueTogether(
            name='benchmark_debt_context_summary',
            unique_together={('debt_context', 'benchmark_type')},
        ),
        migrations.AlterUniqueTogether(
            name='benchmark_debt_context',
            unique_together={('debt_context', 'control')},
        ),
    ]
