# Generated by Django 4.1.11 on 2023-11-10 12:05

from django.db import migrations, models
import django.db.models.deletion
import tagulous.models.fields
import tagulous.models.models


class Migration(migrations.Migration):

    dependencies = [
        ('dojo', '0194_system_settings_debt_context_grade_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='engagement',
            name='debt_context',
        ),
        migrations.AlterField(
            model_name='debt_context',
            name='enable_debt_context_tag_inheritance',
            field=models.BooleanField(default=False, help_text='Enables debt context tag inheritance. Any tags added on a Debt_Context will automatically be added to all Debt_Engagements, Tests, and Debt_Items', verbose_name='Enable Debt Context Tag Inheritance'),
        ),
        migrations.AlterField(
            model_name='debt_item',
            name='out_of_scope',
            field=models.BooleanField(default=False, help_text='Denotes if this flaw falls outside the scope of the test and/or debt_engagement.', verbose_name='Out Of Scope'),
        ),
        migrations.CreateModel(
            name='Tagulous_Debt_Engagement_tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('slug',)},
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='Tagulous_Debt_Engagement_inherited_tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('slug',)},
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='Debt_Engagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('version', models.CharField(blank=True, help_text='Version of the debt_context the debt_engagement tested.', max_length=100, null=True)),
                ('first_contacted', models.DateField(blank=True, null=True)),
                ('target_start', models.DateField()),
                ('target_end', models.DateField()),
                ('reason', models.CharField(blank=True, max_length=2000, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('tracker', models.URLField(blank=True, help_text='Link to epic or ticket system with changes to version.', null=True)),
                ('test_strategy', models.URLField(blank=True, null=True)),
                ('threat_model', models.BooleanField(default=True)),
                ('api_test', models.BooleanField(default=True)),
                ('pen_test', models.BooleanField(default=True)),
                ('check_list', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('Blocked', 'Blocked'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed'), ('In Progress', 'In Progress'), ('On Hold', 'On Hold'), ('Waiting for Resource', 'Waiting for Resource')], default='', max_length=2000, null=True)),
                ('progress', models.CharField(default='threat_model', editable=False, max_length=100)),
                ('tmodel_path', models.CharField(blank=True, default='none', editable=False, max_length=1000, null=True)),
                ('done_testing', models.BooleanField(default=False, editable=False)),
                ('debt_engagement_type', models.CharField(choices=[('Interactive', 'Interactive'), ('CI/CD', 'CI/CD')], default='Interactive', max_length=30, null=True)),
                ('build_id', models.CharField(blank=True, help_text='Build ID of the debt_context the debt_engagement tested.', max_length=150, null=True, verbose_name='Build ID')),
                ('commit_hash', models.CharField(blank=True, help_text='Commit hash from repo', max_length=150, null=True, verbose_name='Commit Hash')),
                ('branch_tag', models.CharField(blank=True, help_text='Tag or branch of the debt_context the debt_engagement tested.', max_length=150, null=True, verbose_name='Branch/Tag')),
                ('source_code_management_uri', models.URLField(blank=True, help_text='Resource link to source code', max_length=600, null=True, verbose_name='Repo')),
                ('deduplication_on_debt_engagement', models.BooleanField(default=False, help_text='If enabled deduplication will only mark a debt_item in this debt_engagement as duplicate of another debt_item if both debt_items are in this debt_engagement. If disabled, deduplication is on the debt_context level.', verbose_name='Deduplication within this debt_engagement only')),
                ('build_server', models.ForeignKey(blank=True, help_text='Build server responsible for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debt_build_server', to='dojo.tool_configuration', verbose_name='Build Server')),
                ('debt_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.debt_context')),
                ('files', models.ManyToManyField(blank=True, editable=False, to='dojo.fileupload')),
                ('inherited_tags', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Internal use tags sepcifically for maintaining parity with debt_context. This field will be present as a subset in the tags field', to='dojo.tagulous_debt_engagement_inherited_tags')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='dojo.dojo_user')),
                ('notes', models.ManyToManyField(blank=True, editable=False, to='dojo.notes')),
                ('orchestration_engine', models.ForeignKey(blank=True, help_text='Orchestration service responsible for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debt_orchestration', to='dojo.tool_configuration', verbose_name='Orchestration Engine')),
                ('preset', models.ForeignKey(blank=True, help_text='Settings and notes for performing this debt_engagement.', null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.engagement_presets')),
                ('report_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.report_type')),
                ('requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.contact')),
                ('risk_acceptance', models.ManyToManyField(blank=True, default=None, editable=False, to='dojo.risk_acceptance')),
                ('source_code_management_server', models.ForeignKey(blank=True, help_text='Source code server for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debt_source_code_management_server', to='dojo.tool_configuration', verbose_name='SCM Server')),
                ('tags', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Add tags that help describe this debt_engagement. Choose from the list or add new tags. Press Enter key to add.', to='dojo.tagulous_debt_engagement_tags')),
            ],
            options={
                'ordering': ['-target_start'],
            },
        ),
        migrations.AddIndex(
            model_name='debt_engagement',
            index=models.Index(fields=['debt_context', 'active'], name='dojo_debt_e_debt_co_24378e_idx'),
        ),
    ]
